form{
  position: relative;
    display: flex;
    flex-direction: column;
  
  >textarea{
    font-family: 'Poppins';
    color: white;
    background-color: #141D2F;
    border: 2px solid #9747FF; 
      border-radius: 12px;

      position: relative;
      z-index: 3;
  }
 
>input{
  position: relative;
  z-index: 3;
}

  /* Style the input and textarea when they are focused */
  input:focus, textarea:focus {
  border-color: rgb(123, 255, 0); /* Change this to your desired color */
  outline: none; /* Removes the default outline, if you don't want it */
}




}


/* Style inputs with type="text", select elements and textareas */
input[type=text], textarea {

    font-family: 'Poppins';
    color: white;
    border: 2px solid #9747FF; 
    border-radius: 12px;
    background-color: #141D2F;

   
    padding: 12px; /* Some padding */ 
    
    
    box-sizing: border-box; /* Make sure that padding and width stays in place */
   margin: 8px 0px;
    resize: vertical /* Allow the user to vertically resize the textarea (not horizontally) */

  }
  

  button{
    width: 260px;
    font-size: 24px;
        font-family: 'Poppins';
        color: white;
        padding: 16px 32px;
        border-radius: 16px;
        border: none;
        background-color: #70E61C;
        cursor: pointer;
        transition: transform 100ms ease, background-color 150ms ease;

        margin: 32px 0px;

        &:hover{
            background-color:#9747FF ;
            transform: scale(1.2, 1.1) translateY(5%);
          
        }
  }

  button[disabled] {
    background-color: #B6B6B6;
    cursor: not-allowed; /* Optional: to visually indicate the button is not clickable */
    transform: none; /* Prevents the hover transform effect when disabled */
}

button[disabled]:hover {
    background-color: #B6B6B6; /* Ensure the color stays gray even if hovered */
    transform: none; /* Ensure no scaling occurs when hovering over a disabled button */
}

  span{
    font-family: 'Poppins';
    color: red;
    font-weight: 300;
    color: red;
  }


  .custom-checkbox {
    display: flex;
    align-items: center;
    cursor: pointer;
    user-select: none;
    margin: 8px 0px;
  }
  
  .checkbox-icon {
    border-radius: 50%;
    width: 28px;
    height: 28px;
    margin: 0px 10px 0px 0px;
    background: url('../../../../assets/img/checkboxempty.svg') no-repeat center center;
    flex-shrink: 0;
    transition: background 0.3s ease;
    &:hover{
      background-color: #183771;
    }
  }
  
  .custom-checkbox.checked .checkbox-icon {
    background: url('../../../../assets/img/checkboxchecked.svg') no-repeat center center;
    // background-size: contain;
    &:hover{
      background-color: #183771;
    }
  }



  // .popup-container {
  //   display: flex;
  //   justify-content: center;
  //   align-items: center;
  //   font-size: 20px;
  //   width: 50%;
  //   height: 25%;
  //   text-align: center;
  //   position: absolute;
  //   z-index: 10;
  //   top: 6%;
  //   left: 20%;
  //   background-color: #141D2F;
  //   color: #70E61C;
  //   padding: 16px;
  //   border-radius: 8px;
  //   border: 2px solid #70E61C;
  //   box-shadow: 0 2px 10px rgba(255, 255, 255, 0.1);
  //   opacity: 1;
  //   transition: opacity 1s ease-in-out;
  // }


  .popup-container {
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 20px;
    width: 50%;
    height: auto; // Adjust the height based on content
    text-align: center;
    position: absolute;
    z-index: 10;
    top: 20%; // Position at 50% from the top
    left: 50%; // Position at 50% from the left
    transform: translate(-50%, -50%); // Center the popup by shifting it back by 50% of its own width and height
    background-color: #141D2F;
    color: #70E61C;
    padding: 16px;
    border-radius: 8px;
    border: 2px solid #70E61C;
    box-shadow: 0 2px 10px rgba(255, 255, 255, 0.1);
    opacity: 0;
    transition: opacity 1s ease-in-out;
}


.fade-in {
  animation: fadeIn 1s forwards;
}

.fade-out {
  animation: fadeOut 1s forwards;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}